---
layout: 'default'
title: 'Fast Lecture 05'
weburl: ''
units: []
lecture_date: '2013/02/19'
---

include ../../fragments/slide_mixins

- var images = get_images('birds_mexico')

//- *******************************
//- take feedback forms


.deck-container

  mixin title_slide({document:document, images:images})

  //- -----------------------
  //- translation with multiple quantifiers
      
  //- unit: Something is above something
  - d = get_unit(740)
    mixin section({unit:d, images:images})
    mixin render_unit(d)

  //- unit: Everyone likes puffins
  section.slide#unit_742
    p.center.middle one last example, with ∀ this time  ...
  - d = get_unit(742)
    mixin render_unit(d)

  //- there is a store for everything
  - d = get_unit(560)
    mixin section({unit:d, images:images})
    mixin render_unit(d)

    
  //- -----------------------

  //- *I made a website
  .slide
    .words: .container_12: .grid_12
      p.middle.center http://logic-1.butterfill.com
    
  //- *Do feedback forms
  .slide
    .words: .container_12: .grid_12
      p.middle.center feedback
    
  //- *report feedback
  .slide
    .words: .container_12: .grid_12
      p 'The (fastrack) lectures are interesting and useful and feel as though they go at a reasonable pace.
      p 'The seminars are useful and help with specific problems in a more in depth way.
      p.slide 'The book and software are the downfall of the module. The book doesn't explain things well and adds confusion to the material, and the software is difficult to use and makes me understand things less. I think the module could be improved if the Language, Proof and Logic book was no longer classed as essential, but rather just recommended.
      p.slide Problems for the seminars should not revolve around using the programme, but instead have exercises which need to be written up, to help further aid the understanding of the material.'
    
  //- -----------------------


  //- unit: Statement of soundness and completeneness
  - d = get_unit(400)
    mixin section({unit:d, images:images})
    mixin render_unit(d)


  //- -----------------------
  //- relations (includes how to express counterexamples formally)

  - d = get_unit(125)
    mixin section({unit:d, images:images})
    mixin render_unit(d)

  - d = get_unit(581)
    mixin section({unit:d, images:images})
    mixin render_unit(d)

  - d = get_unit(583)
    mixin section({unit:d, images:images})
    mixin render_unit(d)


  //- -----------------------


  //- *2012-3 ended here 
    //- truth functional completeness
    - d = get_unit(435)
      mixin section({unit:d, images:images})
      mixin render_unit(d)
    - d = get_unit(430)
      mixin section({unit:d, images:images})
      mixin render_unit(d)
  
  
    //- *todo check not done in fastlecture 04 (was there as spare)
    //- unit: Does ‘if’ mean what ‘→’ means?
    - var d = get_unit(640)
      mixin section({unit:d, images:images})
      mixin render_unit(d)
  
    
    //- unit: ∀Intro: An Incorrect Proof
    - var d = get_unit(572)
      mixin section({unit:d, images:images})
      mixin render_unit(d)
  
  
    //- -----------------------
    //- spare topics: hope this won't be needed
  
    //- unit: quantifier equivalences: using propositional equivalences
    - var d = get_unit(760)
      mixin section({unit:d, images:images})
      mixin render_unit(d)
    //- unit: quantifier equivalences: universal not existential
    - var d = get_unit(764)
      mixin section({unit:d, images:images})
      mixin render_unit(d)


