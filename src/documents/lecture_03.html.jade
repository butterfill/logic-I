---
layout: 'default'
title: 'Lecture 03'
weburl: ''
units: []
---

include ../../fragments/slide_mixins

- var images = get_images('budapest')


.deck-container
  mixin title_slide({document:document, images:images})

  //- 2012/3 : decided not to do this (or put in lecture 04?): important to get stuck into formal proof
    //- recap: validity and counterexamples (quick opener)
    //- nb: this might have been used in lecture 02 (depending on whether counterexamples where covered in lecture 01 or later)
    - var d = get_unit('05')
      mixin render_unit(d)

  //- section: unit_211, unit_21 = formal proof 1
  - var d = get_unit('211')
    mixin section({unit:d, images:images})
    mixin render_unit(d)
  - var d = get_unit('213')
    mixin render_unit(d)
  - var d = get_unit('21')
    mixin render_unit(d)


  //- break
  // *notes: logic can be confusing at first. Don't despair. It's important to have a logic partner.
  section#be_honest.slide
    img.bkg(src="/img/xkcd_1146.png",width="800px").em-above
    .right(style="position:absolute;top:520px;")
      p source: 
        em xkcd.com/1146
  
  section#exercises_warning.slide
    p.middle.center Fast track and normal seminars have 
      span.diff different exercises.
    .slide.anim-addclass(data-what=".diff", data-class="bkg-words-highlight-red")
  
  //- reply to student email (keep anonymous)
  section#disjunction_is_exclusive.slide
    .words: .container_12: .grid_12
      p ‘... some confusion in regards to 
        span.first-mistake the ∨ symbol 
          span.first-mistake-b representing ‘or’
        | ...’
      .slide.anim-addclass(data-what=".first-mistake", data-class="bkg-words-highlight-red")
      //- indent to avoid dimming!
      .slide.em-above
        table.truth-table
          tr
            td A
            td B
            td.result-col A ∨ B
          tr
            td T
            td T
            td.result-col T
            td.comment.hide <--- ‘surely this is illogical’
          tr
            td T
            td F
            td.result-col
              span.error F
              span.correct.hide T
          tr
            td F
            td T
            td.result-col 
              span.error F
              span.correct.hide T
          tr
            td F
            td F
            td.result-col F
        //- fix mistake in truth table
        .slide.anim-hide.anim-continue(data-what='.error')
        .slide.anim-removeclass(data-what='.correct', data-class='hide')
        //- indent to avoid dimming!
        .slide.anim-attribute.anim-continue(data-what=".first-mistake-b", data-attr="text-decoration:line-through")
        .slide.anim-attribute.anim-continue(data-what=".first-mistake-b", data-attr="opacity:0.4")
        .slide.anim-removeclass(data-what=".first-mistake", data-class="bkg-words-highlight-red")
        .slide
          p.em-above ‘What makes the ∨ inclusive or exclusive, and is it always one of the two, or can it mean different things in different situations?’
        .slide
          p  It ‘is clearer with the example: ‘The pig went down the left fork or the right fork.’ Clearly this is a case where it can only be one or the other. The pig cannot go down both forks.’ 
          //- indent to avoid dimming!
          .slide.anim-removeclass(data-what=".comment", data-class="hide")



  //- unit: rules for identity
  - var d = get_unit('110')
    mixin section({unit:d, images:images})
    mixin render_unit(d)  
  

  //- unit: how to write proofs
  - var d = get_unit('130')
    mixin section({unit:d, images:images})
    mixin render_unit(d)  
  

  //- unit: complex truth tables: (P and R) or R
  - var d = get_unit('09')
    mixin section({unit:d, images:images})
    mixin render_unit(d)  
  


  //- unit: tautologies and contradictions, logical validity is not what you think it is.
  //- *check: this might have been used in lecture 02 (if run out of time)
  //- 2012-3 didn't have time for bush part (unit_162)
  - var d2 = get_unit('161')
    mixin render_unit(d2)
  - var d = get_unit('160')
    mixin section({unit:d, images:images})
    mixin render_unit(d)


    a.deck-permalink(href='.', title='Permalink to this slide') #
